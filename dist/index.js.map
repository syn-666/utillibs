{"version":3,"file":"index.js","sources":["../src/deepClone.ts"],"sourcesContent":["/**\n * 深拷贝\n * @param obj 需要深拷贝的对象\n * @returns\n */\nconst deepClone = (obj: Object) => {\n\t// 不是引用类型或者是null的话直接返回\n\tif (typeof obj !== \"object\" || typeof obj == null) {\n\t\treturn obj;\n\t}\n\t// 初始化结果\n\tlet result: object;\n\tif (obj instanceof Array) {\n\t\tresult = [];\n\t} else {\n\t\tresult = {};\n\t}\n\n\tfor (let key in obj) {\n\t\t// 保证不是原型上的属性\n\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t// 递归调用\n\t\t\tresult[key] = deepClone(obj[key]);\n\t\t}\n\t}\n\treturn result;\n};\n\nexport default deepClone;\n"],"names":[],"mappings":";;;;;;CAAA;;;;CAIG;AACG,KAAA,SAAS,GAAG,UAAC,GAAW,EAAA;;KAE7B,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE;CAClD,QAAA,OAAO,GAAG,CAAC;CACX,KAAA;;CAED,IAAA,IAAI,MAAc,CAAC;KACnB,IAAI,GAAG,YAAY,KAAK,EAAE;SACzB,MAAM,GAAG,EAAE,CAAC;CACZ,KAAA;CAAM,SAAA;SACN,MAAM,GAAG,EAAE,CAAC;CACZ,KAAA;CAED,IAAA,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;;CAEpB,QAAA,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;;aAE5B,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CAClC,SAAA;CACD,KAAA;CACD,IAAA,OAAO,MAAM,CAAC;CACf;;;;;;;;;;"}